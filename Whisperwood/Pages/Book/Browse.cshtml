@page
@model Whisperwood.Pages.Book.BrowseModel

@{
    Layout = "_Layout";
    ViewData["Title"] = "Browse Books";
}

<div class="px-4 py-8">
    <h1 class="text-accent3 mb-6 text-center text-4xl font-bold">Browse Books</h1>

    <div id="error-message" class="mb-4 hidden text-center text-red-600"></div>

    <div id="books-container" class="grid grid-cols-1 gap-6 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4">
        <!-- Books will be injected here by JavaScript -->
        <div id="loading" class="text-accent2 col-span-full text-center text-lg">Loading books...</div>
    </div>

    <div id="no-books" class="text-accent2 mt-4 hidden text-center text-lg">No books found.</div>
</div>

@section Scripts {
    <script>
        async function fetchBooks() {
            const booksContainer = document.getElementById('books-container');
            const loadingElement = document.getElementById('loading');
            const noBooksElement = document.getElementById('no-books');
            const errorMessageElement = document.getElementById('error-message');
            
            try {
                const response = await fetch('https://localhost:7018/api/Book/getall');
                if (!response.ok) {
                    throw new Error('Failed to load books. Please try again later.');
                }

                const books = await response.json();
                loadingElement.classList.add('hidden');

                if (books && books.length > 0) {
                    books.forEach(book => {
                        const authorNames = book.authorBooks && book.authorBooks.length > 0
                            ? book.authorBooks.map(ab => ab.author.name).join(', ')
                            : 'Unknown Author';

                        const bookElement = document.createElement('a');
                        bookElement.href = `/Book/Details/${book.id}`;
                        bookElement.className = 'block bg-primary border-accent1 rounded-lg border-[2px] p-4 shadow-md transition-shadow hover:shadow-xl';
                        bookElement.innerHTML = `
                            ${book.coverImage && book.coverImage.coverImageURL
                                ? `<img src="${book.coverImage.coverImageURL}" alt="${book.title}" class="mb-4 h-64 w-full rounded-md object-cover" />`
                                : `<div class="text-accent3 mb-4 h-64 w-full">No Image</div>`
                            }
                            <h2 class="text-accent3 text-xl font-semibold">${book.title}</h2>
                            <p class="text-accent1 font-medium">${authorNames}</p>
                            <div class="mb-3 flex justify-between">
                                <p class="text-accent3"> ★ ${book.averageRating} </p> 
                                <p class="text-accent1 font-medium">Rs. ${book.price.toFixed(2)}</p>
                            </div>
                            <div class="flex justify-between gap-2">
                                <button id="wishlist-${book.id}" class="bg-accent3 rounded px-3 py-1 text-white hover:bg-accent2">Wishlist</button>
                                <button id="review-${book.id}" class="bg-accent3 rounded px-3 py-1 text-white hover:bg-accent2">Review</button>
                                <button id="cart-${book.id}" class="bg-accent3 rounded px-3 py-1 text-white hover:bg-accent2">Cart</button>
                            </div>
                        `;
                        booksContainer.appendChild(bookElement);
                        // Initialize wishlist button for this book
                        initializeWishlistButton(`wishlist-${book.id}`, book.id);
                    });
                } else {
                    noBooksElement.classList.remove('hidden');
                }
            } catch (error) {
                loadingElement.classList.add('hidden');
                errorMessageElement.textContent = error.message;
                errorMessageElement.classList.remove('hidden');
            }
        }

        // Call fetchBooks when the page loads
        document.addEventListener('DOMContentLoaded', fetchBooks);
    </script>
}