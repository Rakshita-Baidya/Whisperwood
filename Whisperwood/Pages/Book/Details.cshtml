@page "{id}"
@model Whisperwood.Pages.Book.DetailsModel

@{
    Layout = "_Layout";
    ViewData["Title"] = "Book Details";
}

<div class="container mx-auto px-4 py-8">
    <div id="error-message" class="mb-6 hidden text-center text-red-600"></div>
    <div id="loading" class="text-accent2 col-span-full text-center text-lg">Loading book details...</div>
    <div id="book-details" class="hidden">
        <div class="flex gap-8">
            @* top *@
            <div class="absolute z-50 ml-36 flex w-2/3 justify-between">
                <div id="cover-image" class="h-96 rounded-md shadow-md"></div>
                <div class="mt-8">
                    <h1 id="book-title" class="text-accent3 mb-2 text-5xl font-bold"></h1>
                    <p id="book-author" class="text-accent2 mb-4 text-3xl italic"></p>
                    <div class="text-accent3 mb-4 flex w-full justify-between text-xl">
                        <div class="mr-64">
                            <p id="book-isbn" class="mb-2"></p>
                            <p id="book-published" class="mb-2"></p>
                            <p id="book-edition" class="mb-2"></p>
                        </div>
                        <div class="text-right">
                            <p id="book-stock" class="mb-2"></p>
                            <p id="book-price" class="font-medium"></p>
                        </div>
                    </div>
                    <div class="mb-4 flex items-center text-xl">
                        <div id="book-rating" class="text-accent3 mr-2"></div>
                        <span class="text-accent2">★★★★★</span>
                    </div>
                </div>
            </div>
            @* Book Details *@
            <div class="mt-80 w-full">
                <div class="bg-accent4 mt-4 flex h-24 w-full items-center justify-end gap-2 rounded">
                    <div class="w-3/5 space-x-6">
                        <button id="add-to-wishlist" class="bg-accent3 rounded px-2 py-1 text-white hover:bg-accent3">Add to Wishlist</button>
                        <button id="add-to-cart" class="bg-accent3 rounded px-2 py-1 text-white hover:bg-accent3">Add to Cart</button>
                        <button id="add-review" class="bg-accent3 rounded px-2 py-1 text-white hover:bg-accent3">Add a Review</button>
                    </div>
                </div>
                <div class="bg-primary rounded-lg p-6 shadow-md">
                    <div class="m-4 grid grid-cols-2 gap-4">
                        <div class="rounded-lg">
                            <h2 class="text-accent4 text-xl font-semibold">Description</h2>
                            <p id="book-synopsis" class="text-accent2"></p>
                        </div>
                        <div class="text-accent3 gap-4 space-y-4">
                            <div>
                                <h2 class="text-accent4 text-xl font-semibold">Author</h2>
                                <p id="author-details"></p>
                            </div>
                            <div>
                                <h2 class="text-accent4 text-xl font-semibold">Genre</h2>
                                <p id="genre-details"></p>
                            </div>
                            <div>
                                <h2 class="text-accent4 text-xl font-semibold">Language</h2>
                                <p id="book-language"</p>
                            </div>
                            <div>
                                <h2 class="text-accent4 text-xl font-semibold">Format</h2>
                                <p id="book-format"></p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        async function fetchBookDetails() {
            const elements = {
                error: document.getElementById('error-message'),
                loading: document.getElementById('loading'),
                details: document.getElementById('book-details'),
                cover: document.getElementById('cover-image'),
                title: document.getElementById('book-title'),
                author: document.getElementById('book-author'),
                stock: document.getElementById('book-stock'),
                price: document.getElementById('book-price'),
                isbn: document.getElementById('book-isbn'),
                published: document.getElementById('book-published'),
                edition: document.getElementById('book-edition'),
                rating: document.getElementById('book-rating'),
                synopsis: document.getElementById('book-synopsis'),
                language: document.getElementById('book-language'),
                format: document.getElementById('book-format'),
                authorDetails: document.getElementById('author-details'),
                genreDetails: document.getElementById('genre-details'),
                wishlist: document.getElementById('add-to-wishlist'),
                cart: document.getElementById('add-to-cart'),
                review: document.getElementById('add-review')
            };

            const id = window.location.pathname.split('/').pop();

            try {
                const response = await fetch(`https://localhost:7018/api/Book/getbyid/${id}`);
                if (!response.ok) throw new Error('Failed to load book details. Please try again later.');

                const book = await response.json();
                elements.loading.classList.add('hidden');
                elements.details.classList.remove('hidden');

                elements.cover.innerHTML = book.coverImage?.coverImageURL
                    ? `<img src="${book.coverImage.coverImageURL}" alt="${book.title}" class="h-96 w-full rounded-md object-cover shadow-md" />`
                    : `<div class="bg-accent2 text-accent3 flex h-96 w-full items-center justify-center rounded-md shadow-md">No Image</div>`;

                elements.title.textContent = book.title || 'Untitled';
                elements.author.textContent = book.authorBooks?.length > 0
                    ? book.authorBooks.map(ab => ab.author.name).join(', ')
                    : 'Unknown Author';
                elements.stock.textContent = `Available Stock: ${book.stock || 0}`;
                elements.price.textContent = `Price: Rs. ${book.price?.toFixed(2) || '0.00'}-`;
                elements.isbn.textContent = `ISBN: ${book.isbn || 'N/A'}`;
                elements.published.textContent = `Published Date: ${book.publishedDate || 'N/A'}`;
                elements.edition.textContent = `Edition: ${book.edition || 1}`;
                elements.rating.innerHTML = `${book.averageRating || 0} `;
                elements.rating.nextElementSibling.textContent = '★★★★★'.slice(0, Math.round(book.averageRating || 0)).padEnd(5, '☆');
                elements.synopsis.textContent = book.synopsis || 'No description available';
                elements.language.textContent = book.language || 'Unknown';
                elements.format.textContent = book.format === 0 ? 'Paperback' : 'Unknown';

                elements.authorDetails.innerHTML = book.authorBooks?.length > 0
                    ? book.authorBooks.map(ab => `
                        <div>
                            ${ab.author.name}<br>
                            Nationality: ${ab.author.nationality || 'Unknown'}<br>
                            DOB: ${ab.author.dob || 'Unknown'}<br>
                            Contact: ${ab.author.contact || 'Unknown'}<br>
                            Email: ${ab.author.email || 'Unknown'}
                        </div>
                    `).join('<hr class="border-accent2 my-2">')
                    : 'No authors listed';

                elements.genreDetails.textContent = book.genreBooks?.length > 0
                    ? book.genreBooks.map(gb => `${gb.genre.name} (${gb.genre.description || 'No description'})`).join(', ')
                    : 'No genres listed';

                // Initialize wishlist functionality
                initializeWishlistButton('add-to-wishlist', id);

                //cart func
                initializeCartButton('add-to-cart', book.id, book.stock);

                elements.review.addEventListener('click', (e) => {
                    e.preventDefault();
                    alert(`Add a review for ${book.title}! (Implement review form here)`);
                });
            } catch (error) {
                elements.loading.classList.add('hidden');
                elements.error.textContent = error.message;
                elements.error.classList.remove('hidden');
            }
        }

        document.addEventListener('DOMContentLoaded', fetchBookDetails);
    </script>
}